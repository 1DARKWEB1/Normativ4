import aiohttp
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import asyncio

API_TOKEN = '8199528786:AAGNvFfO_r8zgdWNSZQi3gmV1GpdrYpNRMQ'
API_URL = 'http://127.0.0.1:8000/api/courses/'

bot = Bot(token=API_TOKEN)
dp = Dispatcher()


# üîπ –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å—ã –∏–∑ Django API
async def get_courses(params: str = ""):
    url = f"{API_URL}?{params}" if params else API_URL
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            return await response.json()


# üîπ –°—Ç–∞—Ä—Ç ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤
@dp.message(Command("start"))
async def start(message: types.Message):
    courses = await get_courses()
    if not courses:
        await message.answer("‚ùå –ö—É—Ä—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    text = "üìö *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã:*\n\n"
    for c in courses:
        text += f"‚Ä¢ {c['title']} (ID: {c['id']})\n"
    text += (
        "\nüîé –ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∫—É—Ä—Å:\n"
        "‚Äî –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ *–Ω–æ–º–µ—Ä ID* (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2)\n"
        "‚Äî –∏–ª–∏ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: python)"
    )

    await message.answer(text, parse_mode="Markdown")


# üîπ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message()
async def handle_filter(message: types.Message):
    query = message.text.strip()

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª —á–∏—Å–ª–æ ‚Äî —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ ID
    if query.isdigit():
        param = f"id__gte={query}"
    else:
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç ‚Äî –∏—â–µ–º –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
        param = f"title__icontains={query}"

    data = await get_courses(param)

    if not data:
        await message.answer("‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.")
        return

    text = "üéØ *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:*\n\n"
    for c in data:
        text += f"üè∑ *{c['title']}*\n{c['description']}\n\n"

    await message.answer(text, parse_mode="Markdown")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
